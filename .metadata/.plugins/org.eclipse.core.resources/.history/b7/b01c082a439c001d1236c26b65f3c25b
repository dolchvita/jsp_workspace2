<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
	String[] sizeList={"XS","S","M","L","XL","XXL"};
	String[] colorList={"베이지","네이비","브라운","블랙"};
%>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>상품 등록 </title>
<%@ include file="/admin/inc/header_link.jsp" %>
  </head>
<body class="hold-transition sidebar-mini layout-fixed">
<div class="wrapper">



<%@ include file="/admin/inc/preloader.jsp" %>
<%@ include file="/admin/inc/navbar.jsp" %>

  <!-- Main Sidebar Container -->
<%@ include file="/admin/inc/sidebar_left.jsp" %>

  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
      <div class="container-fluid">
        <div class="row mb-2">
          <div class="col-sm-6">
            <h1 class="m-0">Dashboard</h1>
          </div><!-- /.col -->
          <div class="col-sm-6">
            <ol class="breadcrumb float-sm-right">
              <li class="breadcrumb-item"><a href="#">Home</a></li>
              <li class="breadcrumb-item active">Dashboard v1</li>
            </ol>
          </div><!-- /.col -->
        </div><!-- /.row -->
      </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    
	<!-- content -->
	<section class="content">
		<div class="container-fluid">
			<div class="col">
			
				<!-- 폼 시작 -->
				<form id="fom1">
				
					<div class="form-group">
						<select class="form-control" id="category_idx"></select>
					</div>
					<div class="form-group">
						<input type="text" class="form-control" id="product_name" placeholder="상품명">
					</div>
					<div class="form-group">
						<input type="text" class="form-control" id="brand" placeholder="브랜드">
					</div>
					<div class="form-group">
						<input type="text" class="form-control" id="price" placeholder="가격">
					</div>
					<div class="form-group">
						<input type="text" class="form-control" id="discount" placeholder="할인가">
					</div>
	
					<div class="form-group">
						<%for(int i=0; i<sizeList.length; i++){ %>
						<div class="icheck-primary d-inline">
							<input type="checkbox" id="size<%=i %>" name="size" value="<%=sizeList[i]%>">
							<label for="size<%=i%>"><%=sizeList[i]%></label>
						</div>
						<%} %>
					</div>
	
					<div class="form-group">
						<%for(int i=0; i<colorList.length; i++){ %>
						<div class="icheck-primary d-inline">
							<input type="checkbox" id="color<%=i %>" name="color" value="<%=colorList[i]%>">
							<label for="color<%=i%>"><%=colorList[i]%></label>
						</div>
						<%} %>
					</div>
	
	
					<div class="form-group">
	                  <textarea id="detail" class="form-control" ></textarea>
	            	</div>
	
					<div class="form-group">
						<input type="file" id="file" multiple>
					</div>
							
					<!-- 미리보기 이미지 -->
					<div class="row form-group" id="preview">
						이미지 나올곳
					</div>
	
					<div class="form-group">
							<button type="button" class="btn btn-primary" id="bt_regist">등록</button>
					</div>
				
				</form>
				<!-- 폼 끝 -->
			
			</div>
		</div>
	</section>
	<!-- ./content-->

</div>
 <!-- /.content-wrapper -->
  
<%@ include file="/admin/inc/footer.jsp" %>

  <!-- Control Sidebar -->
<%@ include file="/admin/inc/sidebar_right.jsp" %>

  <!-- /.control-sidebar -->
</div>
<!-- ./wrapper -->

<%@ include file="/admin/inc/footer_link.jsp" %>
<script type="text/babel">
	// 1-2) 생성된 태그의 속성값을 받아서 처리 

	function ImageBox(props){
		return(
			<div className="col-sm-2 border">
				<div>
					<a href="#" onClick={(e)=>removeImg(e, props.index)}>X</a>
				</div>
				<img src={props.src} width="100px"/>
			</div>
		);
	}

</script>
<script type="text/javascript">
	function regist(){
		
		// 폼 형식으로 보낼 데이터폼 객체
		let formData=new FormData();
		formData.append("category_idx", $("#category_idx").val());
		formData.append("product_name", $("#product_name").val());
		formData.append("brand", $("#brand").val());
		formData.append("price", $("#price").val());
		formData.append("discount", $("#discount").val());
		
		let colorArray=[];
		// 몇까지 제한 두어야 하는지 헷갈리네 
		for(let i=0; i<colorArray.length;i++){
			colorArray.push($($("input[name='size']:checked")));	
		}
		formData.append("size[]",colorArray);
		
		formData.append("discount", $("#detail").val());
		
		
		// 사진 파일도 같이 보내기 
		for(let i=0; i<fileList.length; i++){
			let file=fileList[i];
			// 파라미터명을 지정하고 실제 데이터밗을 넣어
			formData.append("file",file);
		}
		
		
		$.ajax({
			url:"/admin/product/regist.jsp",
			type:"post",
			
			processData:false,		// 멀티 객체이기 때문에
			contentType:false,		// 파일 전송의 경우 queryString 방지하기
			
			data:formData,
			
			success:function(result, status, xhr){
				console.log(result);
				alert();
			}
		});
	}
	
	
</script>
<script type="text/babel">
	let previewRoot;
	let tag=[];		// 리액트 태그를 모아놓을 배열 !
	let fileList=[];
	let oriFiles=[];		// 	파일 객체들을 일반 Element로 바꿀 배열!

	function removeImg(e, index){
		// 시각적인 사진 처리 
		$(e.target).parent().parent().remove();
		
		// 실제 배열에서 지우기 
		// 그럼 해당 파일을 먼저 알아봐야 함! 그 해당 파일은 어떻게 알까? --> 고유값을 알고 있으면 됨!
		// 고유값으로 이벤트 대상 파일 추출 
		let file=oriFiles[index];
		
		// 추출된 파일이 어느 순번인지 조사 
		let sel_index=oriFiles.indexOf(file);

		// 구한 순번으로 배열 요소 삭제 
		oriFiles.splice(sel_index, 1);
	}
	
	
	function createCategoryOption(result){
		console.log(result);
		let op="<option value='0'>상품분류</option>";
			
		for(let i=0; i<result.length;i++){ //json 배열만큼 반복
			
			let category=result[i];		//카테고리 하나 꺼내기
			op+="<option value='"+category.category_idx+"'>"+category.category_name+"</option>";
		}
		$("#category_idx").html(op);								
	}


	function getCategoryList(){
		$.ajax({
			url:"/admin/category/category_list.jsp",
			type:"GET",
			success:function(result, status, xhr){
				//옵션 채우기 
				createCategoryOption(result);
			}
		});
	}
	
	
	// 사진 미리보기
	// 파일 이미지의 주소값을 담아야 하는데.. 리액트 처리를 해주어야 한다 왜?
	// 1. 내가 반환받은 파일의 정보와 출력시킬 이미지의 주소값 연결
	// 2. 비동기로 요청 처리		3. UI 컴포넌트의 중복 생성 !

	function previewImg(){
		tag=[];

		for(let i=0; i<fileList.length;i++){
			let reader=new FileReader();
	
			reader.onload=function(e){
			
				// 1-1) 태그 생성하기!
				tag.push(<ImageBox key={i} src={e.target.result} index={i}/>);
				
				// 1-3) 루트를 렌더링 하는 시점은?
				// 맨 마지막 사진에 도달했을 때!!
				if(i>=(fileList.length-1)){
					previewRoot.render(tag);
				}
			};
			
			// 파일 읽는 것은 onload가 끝난 시점!
			reader.readAsDataURL(fileList[i]);
		}
	}

	

	$(function(){
		// 리액트 객체 생성
		previewRoot=ReactDOM.createRoot(document.getElementById("preview"));
		getCategoryList();

		$("#bt_regist").click(function(){
			regist();
		});

		
		// 미리보기 
		$("#file").change(function(){
			
			// 파일 정보에 담긴 파일들은 배열의 형태이기 때문에 그 중 하나만 출력해보자! 
			//console.log(this.files[0]);

			// 사진 자체를 지우기 위해서 파일 몸통을 일반 배열로 담기
			oriFiles=fileList;
			
			// 여기서는 src를 얻어야 하기 때문에 this.files를 하나씩 담았지만,
			for(let i=0; i<this.files.length; i++){
				fileList.push(this.files[i]);
			}
			previewImg();
		});

		
	});

</script>

</body>
</html>
    